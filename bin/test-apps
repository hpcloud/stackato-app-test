#!/bin/bash

set -e

source "${BASH_SOURCE%/*}/setup.bash"

USAGE="\

Usage:
    $0 [<options>] [<app-name>...]

Options:
    -h, --help          -- Print this help
    --test              -- Test the apps
    --list              -- List all the known apps by name
    --first=<app>       -- Start testing on this app
    --after=<app>       -- Start testing apps after this one
    --tag=<tag>         -- Select apps by tag
"

main() {
  local all_apps=() test=false list=false first= after=
  get-options "$@"

  cd "${BASH_SOURCE%/*}/.."

  read-conf

  for name in ${all_apps[@]}; do
    if [ -n "$tag" ]; then
      if [[ "$tag" =~ ^! ]]; then
        tag="${tag#!}"
        if [ -n "$(git config -f conf/apps.ini --get-all app.$name.tag "^$tag\$")" ]; then
          continue
        fi
      elif [ -z "$(git config -f conf/apps.ini --get-all app.$name.tag "^$tag\$")" ]; then
        continue
      fi
    fi

    if [ -n "$first" ]; then
      if [ "$first" == "$name" ]; then
        first=
      else
        continue
      fi
    fi

    if [ -n "$after" ]; then
      if [ "$after" == "$name" ]; then
        after=
      fi
      continue
    fi

    if "$list"; then
      echo "$name"
      continue
    fi

    if "$test"; then
      PATH=./bin:$PATH app-test \
        "$name" \
        "$(git config -f conf/apps.ini app.$name.branch)"
      continue
    fi

    echo "You need to specify --list or --test"
    echo "$USAGE"
    exit 1
  done
}

get-options() {
  for arg; do
    case "$arg" in
      -h|--help)
        echo "$USAGE"
        exit 0
        ;;
      --test)
        test=true
        ;;
      --list)
        list=true
        ;;
      --after=*)
        after="${arg#--after=}"
        ;;
      --first=*)
        first="${arg#--first=}"
        ;;
      --tag=*)
        tag="${arg#--tag=}"
        ;;
      *)
        all_apps+=("$arg")
        ;;
    esac
  done

  if [ ${#all_apps[@]} -eq 0 ]; then
    local apps=( $(git config -f conf/apps.ini --get-regexp '^app\..*\.remote$') )
    for name in ${apps[@]}; do
      [[ "$name" =~ / ]] && continue
      name=${name#app.}
      name=${name%.remote}
      all_apps+=("$name")
    done
  fi
}

[ "$BASH_SOURCE" != "$0" ] || main "$@"

# vim: set lisp:
